openapi: 3.0.0
info:
  title: Compliance Documents API
  description: API documentation for the Compliance Documents Management System
  version: 1.0.0

servers:
  - url: http://localhost:5000/api
    description: Development server
  - url: https://api.compliance-docs.com/api
    description: Production server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [user, admin]
        createdAt:
          type: string
          format: date-time

    Document:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        content:
          type: string
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
        createdBy:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Section:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        content:
          type: string
        documentId:
          type: string
        order:
          type: number

    Annotation:
      type: object
      properties:
        _id:
          type: string
        content:
          type: string
        documentId:
          type: string
        sectionId:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
          format: date-time

    SearchResult:
      type: object
      properties:
        total:
          type: number
        results:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              title:
                type: string
              highlight:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      type: string

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string

  /auth/login:
    post:
      summary: Login user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string

  /documents:
    get:
      summary: Get all documents
      tags:
        - Documents
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      $ref: '#/components/schemas/Document'
                  total:
                    type: integer
                  page:
                    type: integer
                  pages:
                    type: integer

    post:
      summary: Create a new document
      tags:
        - Documents
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Document created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'

  /documents/{id}:
    get:
      summary: Get document by ID
      tags:
        - Documents
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'

    delete:
      summary: Delete document
      tags:
        - Documents
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document deleted successfully

  /search:
    get:
      summary: Search documents
      tags:
        - Search
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Search results
